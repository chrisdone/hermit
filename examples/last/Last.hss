consider 'last
consider 'last
fix-intro
{ 0
  { 1
    let-intro 'f
  }
  let-float-arg
  { 1
    unfold-rule "ww"
    { 1
      unfold 'fix
      { 0
        0
        0
        repeat (any-call (unfold '.))
        eta-expand 'b
        0
        eta-expand 'bs
        0
        unfold 'unwrap
        any-td (unfold 'f)
        case-reduce
        one-td (unfold 'wrap >>> case-reduce)
      }
    }
  }
  dead-code-elimination
}
