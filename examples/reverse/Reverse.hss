-- set-renderer latex
-- set-renderer unicode-console
-- unicode-terminal

-- This is the outer rev, with the big lambda
consider 'rev
 { down
   consider 'rev
   fix-intro
-- We've now got a fix version of rev

   { down
      apply-rule ww ;
      cleanup-unfold 
      { 1 ; let-intro 'work }
      let-float-arg 
   }


   prune-td (unfold '.)
   prune-td (unfold '.)

 }
 
-- Normalize to two definitions; first is recursive.
-- { 0 ; 0 ; let-float-let }

-- Unfold wrap and unwrap
{ consider 'work
  prune-td (unfold 'wrap)
  prune-td (unfold 'unwrap)
  unshadow
}

bash    -- TADA


-- And force the worker/wrapper through
   prune-td (unfold '.)
   bash
   any-bu (eta-expand 'ys >>> any-bu (apply-rule "[] ++")) ; bash
   any-bu (apply-rule "repH ++") ; bash
   prune-td (unfold '.)
   prune-td (unfold '.)
   any-bu (apply-rule "repH (:)") ; bash
   any-bu (apply-rule "repH []") ; bash
   prune-td (unfold '.)
   any-bu (apply-rule "[] ++") ; bash
   { consider case ; eta-expand 'ys ; { consider app ; case-float-app } }
   any-bu (unfold-rule "rep-abs-fusion") 
   prune-td (unfold 'fix)
   bash

   